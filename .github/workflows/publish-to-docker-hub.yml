name: CI/CD

on:
  # Permite ejecutar el flujo de trabajo de manera manual
  workflow_dispatch:
  
  # Ejecuta el flujo de trabajo al hacer un git push  
  push:
    branches: ["main"]

  # Ejecuta el flujo de trabajo al hacer un pull request en main
  pull_request:
    branches: ["main"]

jobs:
  # Trabajo 1: Construir y subir la imagen a Docker Hub (CI)
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Login en Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir y etiquetar la imagen (BUILD)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/lamp-crud-app:latest .

      - name: Subir imagen a Docker Hub (PUSH)
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/lamp-crud-app:latest

  # Trabajo 2: Desplegar en servidor de producción (CD)
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Despliegue en servidor de producción
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd actividad61-aplicacion-php-produccion/
            git pull origin main
            docker compose down
            docker compose pull apache
            docker compose up -d